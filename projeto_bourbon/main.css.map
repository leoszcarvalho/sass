{"version":3,"sources":["stdin","bourbon/css3/_linear-gradient.scss","bourbon/helpers/_deprecated-webkit-gradient.scss","bourbon/addons/_font-family.scss"],"names":[],"mappings":"AAEA,IAAI,CAAC;ECkCH,gBAAgB,EDjCgB,GAAG;ECkCnC,gBAAgB,ECFH,8FAAgB;EDG7B,gBAAgB,EAAE,4CAAuB;EACzC,gBAAgB,EAAE,mCAAO;EDlC1B,WAAW,EGHI,eAAe,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,GHIlE;;AAED,GAAG,CACH;EACC,MAAM,EAAE,IAAK,GACb","file":"main.css","sourcesContent":["@import \"bourbon/_bourbon.scss\";\n\nbody {\n\t@include linear-gradient(to top, red, orange);\n\n\tfont-family: $lucida-grande;\n}\n\n.ok\n{\n\tmargin: 10px;\n}\n","@mixin linear-gradient($pos, $G1, $G2: false,\n                       $G3: false, $G4: false,\n                       $G5: false, $G6: false,\n                       $G7: false, $G8: false,\n                       $G9: false, $G10: false,\n                       $deprecated-pos1: left top,\n                       $deprecated-pos2: left bottom,\n                       $fallback: false) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;\n     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;\n     $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: compact($G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10);\n\n  // Set $G1 as the default fallback color\n  $fallback-color: nth($G1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: _deprecated-webkit-gradient(linear, $deprecated-pos1, $deprecated-pos2, $full); // Safari <= 5.0\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","// Render Deprecated Webkit Gradient - Linear || Radial\n//************************************************************************//\n@function _deprecated-webkit-gradient($type,\n                                     $deprecated-pos1, $deprecated-pos2,\n                                     $full,\n                                     $deprecated-radius1: false, $deprecated-radius2: false) {\n  $gradient-list: ();\n  $gradient: false;\n  $full-length: length($full);\n  $percentage: false;\n  $gradient-type: $type;\n\n  @for $i from 1 through $full-length {\n    $gradient: nth($full, $i);\n\n    @if length($gradient) == 2 {\n      $color-stop: color-stop(nth($gradient, 2), nth($gradient, 1));\n      $gradient-list: join($gradient-list, $color-stop, comma);\n    }\n    @else if $gradient != null {\n      @if $i == $full-length {\n        $percentage: 100%;\n      }\n      @else {\n        $percentage: ($i - 1) * (100 / ($full-length - 1)) + \"%\";\n      }\n      $color-stop: color-stop(unquote($percentage), $gradient);\n      $gradient-list: join($gradient-list, $color-stop, comma);\n    }\n  }\n\n  @if $type == radial {\n    $gradient: -webkit-gradient(radial, $deprecated-pos1, $deprecated-radius1, $deprecated-pos2, $deprecated-radius2, $gradient-list);\n  }\n  @else if $type == linear {\n    $gradient: -webkit-gradient(linear, $deprecated-pos1, $deprecated-pos2, $gradient-list);\n  }\n  @return $gradient;\n}\n","$georgia: Georgia, Cambria, \"Times New Roman\", Times, serif;\n$helvetica: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n$lucida-grande: \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif;\n$monospace: \"Bitstream Vera Sans Mono\", Consolas, Courier, monospace;\n$verdana: Verdana, Geneva, sans-serif;\n"],"sourceRoot":"/source/"}